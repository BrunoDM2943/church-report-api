plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.5.RELEASE'
}

group 'com.bitshammer'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    maven{url "http://jasperreports.sourceforge.net/maven2/"}
    maven{url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"}
    jcenter()
}

dependencies {
    compile "com.google.code.gson:gson:2.8.1"
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    
    compileOnly "org.projectlombok:lombok:1.16.10"

    compile ('net.sf.jasperreports:jasperreports:6.0.3') {
        exclude group: 'com.itextpdf'
    }
    compile 'com.itextpdf:itextpdf:5.5.0'
    compile 'com.itextpdf:itext-pdfa:5.5.0'

    compile 'com.auth0:java-jwt:3.4.0'
    compile group: 'org.apache.poi', name: 'poi', version: '3.9'
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.2')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.mockito:mockito-core:2.+"
    test.useTestNG()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': 'com.bitshammer.SparkMain'
        )
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
